version: "3.9"
services:
  web:
    build:
      context: .
    # Construye con el Dockerfile del frontend
      dockerfile: ./docker/web.Dockerfile
    env_file: .env
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
    depends_on:
      - db
      - redis
    ports:
      - "3000:3000"

  worker:
    build:
      context: .
      dockerfile: ./docker/worker.Dockerfile
    env_file: .env
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
    depends_on:
      - db
      - redis

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-ai_publicidad}
    ports:
      - "5432:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: ["redis-server", "--save", "60", "1"]

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "8025:8025"

volumes:
  dbdata:
